name: 'CI'

on:
  - 'pull_request'
  - 'push'

jobs:
  phpSyntaxCheck:
    name: 'PHP Syntax Check'

    strategy:
      matrix:
        php_version:
          - '7.4'
          - '8.0'

    runs-on: 'ubuntu-20.04'

    steps:
      - uses: 'actions/checkout@v2'

      - name: 'Set up PHP version ${{ matrix.php_version }}'
        run: sudo update-alternatives --set php /usr/bin/php${{ matrix.php_version }}

      - name: 'Syntax check'
        run: |
          find . \( -type d \( -name '.git' -or -name 'vendor' -or -name 'node_modules' -or -name 'runtime' \) -prune \) -or \( -type f -name '*.php' -print \) \
            | sort \
            | xargs -n 1 php -l
        env:
          LANG: C
        working-directory: 'webapp'

  makeComposerCache:
    name: 'Make composer cache'

    runs-on: 'ubuntu-20.04'

    steps:
      - uses: 'actions/checkout@v2'

      - uses: 'actions/cache@v2'
        with:
          path: |
            ~/.cache/composer/files
            webapp/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('webapp/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: 'Install Composer dependencies'
        run: 'composer install --prefer-dist'
        working-directory: 'webapp'

  phpStyleCheck:
    name: 'PHP Coding Style'

    runs-on: 'ubuntu-20.04'

    needs: 'makeComposerCache'

    steps:
      - uses: 'actions/checkout@v2'

      - uses: 'actions/cache@v2'
        with:
          path: |
            ~/.cache/composer/files
            webapp/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('webapp/composer.lock') }}

      - name: 'Set up PHP version 8.0'
        run: sudo update-alternatives --set php /usr/bin/php8.0

      - name: 'Install PHP dependencies'
        run: 'composer install --prefer-dist'
        working-directory: 'webapp'

      - name: 'Run PHPCS'
        run: 'vendor/bin/phpcs'
        working-directory: 'webapp'
