name: CI
'on':
  - pull_request
  - push
jobs:
  phpSyntaxCheck:
    name: 'PHP Syntax Check (PHP ${{ matrix.env.php }})'
    strategy:
      matrix:
        env:
          -
            php: '8.1'
            experimental: false
          -
            php: '8.2'
            experimental: false
          -
            php: '8.3'
            experimental: false
          -
            php: '8.4'
            experimental: true
    runs-on: ubuntu-22.04
    steps:
      -
        uses: actions/checkout@v3
      -
        name: 'Set up PHP ${{ matrix.env.php }}'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '${{ matrix.env.php }}'
      -
        name: 'Syntax check'
        continue-on-error: '${{ matrix.env.experimental }}'
        working-directory: webapp
        env:
          LANG: C
        run: |
          find . \( -type d \( -name '.git' -or -name 'vendor' -or -name 'node_modules' -or -name 'runtime' \) -prune \) -or \( -type f -name '*.php' -print \) \
            | sort \
            | xargs -n 1 php -l
  makeComposerCache:
    name: 'Make composer cache'
    runs-on: ubuntu-22.04
    steps:
      -
        uses: actions/checkout@v3
      -
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/composer/files
            webapp/vendor
          key: '${{ runner.os }}-composer-${{ hashFiles(''webapp/composer.lock'') }}'
          restore-keys: |
            ${{ runner.os }}-composer-
      -
        name: 'Set up PHP 8.1'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
      -
        name: 'Install Composer dependencies'
        working-directory: webapp
        run: |
          ln -s `which composer` composer.phar
          ./composer.phar install --prefer-dist
  makeNpmCache:
    name: 'Make NPM cache'
    runs-on: ubuntu-22.04
    steps:
      -
        uses: actions/checkout@v3
      -
        uses: actions/cache@v2
        with:
          path: |
            webapp/node_modules
            ~/.npm
          key: 'npm-${{ hashFiles(''webapp/package-lock.json'') }}'
          restore-keys: npm-
      -
        name: 'Install NPM packages'
        run: 'npm clean-install'
        working-directory: webapp
  phpStyleCheck:
    name: 'PHP Coding Style'
    runs-on: ubuntu-22.04
    needs: makeComposerCache
    steps:
      -
        uses: actions/checkout@v3
      -
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/composer/files
            webapp/vendor
          key: '${{ runner.os }}-composer-${{ hashFiles(''webapp/composer.lock'') }}'
      -
        name: 'Set up PHP 8.1'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
      -
        name: 'Run PHPCS'
        run: vendor/bin/phpcs
        working-directory: webapp
      -
        name: 'Run PHPStan'
        run: 'vendor/bin/phpstan analyze --memory-limit=1G'
        working-directory: webapp
        continue-on-error: true
  jsStyleCheck:
    name: 'JavaScript Coding Style'
    runs-on: ubuntu-22.04
    needs: makeNpmCache
    steps:
      -
        uses: actions/checkout@v3
      -
        uses: actions/cache@v2
        with:
          path: |
            webapp/node_modules
            ~/.npm
          key: 'npm-${{ hashFiles(''webapp/package-lock.json'') }}'
      -
        name: 'Run semistandard'
        run: |
          npx semistandard 'resource/**/*.es'
        working-directory: webapp
  cssStyleCheck:
    name: 'CSS Coding Style'
    runs-on: ubuntu-22.04
    needs: makeNpmCache
    steps:
      -
        uses: actions/checkout@v3
      -
        uses: actions/cache@v2
        with:
          path: |
            webapp/node_modules
            ~/.npm
          key: 'npm-${{ hashFiles(''webapp/package-lock.json'') }}'
      -
        name: 'Run stylelint'
        run: |
          npx stylelint 'resource/**/*.scss'
        working-directory: webapp
  composerLicenseCheck:
    name: 'Check license of composer packages'
    runs-on: ubuntu-22.04
    needs: makeComposerCache
    steps:
      -
        uses: actions/checkout@v3
      -
        name: 'Set up PHP 8.1'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
      -
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/composer/files
            webapp/vendor
          key: '${{ runner.os }}-composer-${{ hashFiles(''webapp/composer.lock'') }}'
      -
        name: 'Run license checker'
        working-directory: webapp
        run: |
          vendor/bin/composer-license-checker check \
            -a BSD-2-Clause \
            -a BSD-3-Clause \
            -a LGPL-2.1-or-later \
            -a LGPL-3.0-or-later \
            -a MIT \
            -a NYSL-0.9982
  npmLicenseCheck:
    name: 'Check license of npm packages'
    runs-on: ubuntu-22.04
    needs: makeNpmCache
    steps:
      -
        uses: actions/checkout@v3
      -
        uses: actions/cache@v2
        with:
          path: |
            webapp/node_modules
            ~/.npm
          key: 'npm-${{ hashFiles(''webapp/package-lock.json'') }}'
      -
        name: 'Run license checker'
        working-directory: webapp
        run: |
          npx license-checker-rseidelsohn --production --onlyAllow="Apache-2.0;BSD-2-Clause;BSD-3-Clause;CC-BY-3.0;CC-BY-4.0;CC0-1.0;ISC;MIT"
  runMake:
    name: 'Make the app and test it (PHP ${{ matrix.env.php }})'
    strategy:
      matrix:
        env:
          -
            php: '8.1'
            experimental: false
          -
            php: '8.2'
            experimental: false
          -
            php: '8.3'
            experimental: false
          -
            php: '8.4'
            experimental: true
    runs-on: ubuntu-22.04
    needs:
      - makeComposerCache
      - makeNpmCache
    continue-on-error: '${{ matrix.env.experimental }}'
    steps:
      -
        uses: actions/checkout@v3
      -
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/composer/files
            webapp/vendor
          key: '${{ runner.os }}-composer-${{ hashFiles(''webapp/composer.lock'') }}'
      -
        uses: actions/cache@v2
        with:
          path: |
            webapp/node_modules
            ~/.npm
          key: 'npm-${{ hashFiles(''webapp/package-lock.json'') }}'
      -
        name: 'Set up PHP ${{ matrix.env.php }}'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '${{ matrix.env.php }}'
      -
        name: 'Adjust environment'
        working-directory: webapp
        run: |
          ln -s `which composer` composer.phar
          make .browserslistrc config/cookie-secret.php
          touch composer.lock package-lock.json node_modules vendor
      -
        name: 'Run `make`'
        working-directory: webapp
        run: |
          make
      -
        name: 'Extract license files'
        working-directory: webapp
        run: |
          ./yii license/clean-extracted
          ./yii license/extract
          bin/npm-postinstall.sh
      -
        name: 'Run tests'
        working-directory: webapp
        run: |
          make test
