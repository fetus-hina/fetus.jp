From 55e5dc5611359bacc64b8cc64fca007c7150d523 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jaroslav=20Hansl=C3=ADk?= <kukulich@kukulich.cz>
Date: Mon, 13 Jun 2022 10:03:10 +0200
Subject: [PATCH] phpstan/phpdoc-parser ^1.6.2

---
 .../Annotation/ParameterAnnotation.php        | 21 ++++++++++++++-----
 .../Helpers/AnnotationHelper.php              |  2 +-
 .../TypeHints/ParameterTypeHintSniff.php      |  7 +++++++
 build/PHPStan/phpstan.neon                    | 10 ++++++++-
 composer.json                                 |  2 +-
 .../data/parameterTypeHintNoErrors.php        | 14 ++++++++++---
 6 files changed, 45 insertions(+), 11 deletions(-)

diff --git a/SlevomatCodingStandard/Helpers/Annotation/ParameterAnnotation.php b/SlevomatCodingStandard/Helpers/Annotation/ParameterAnnotation.php
index 89fcb9cb0..422493c80 100644
--- a/SlevomatCodingStandard/Helpers/Annotation/ParameterAnnotation.php
+++ b/SlevomatCodingStandard/Helpers/Annotation/ParameterAnnotation.php
@@ -4,6 +4,7 @@
 
 use InvalidArgumentException;
 use PHPStan\PhpDocParser\Ast\PhpDoc\ParamTagValueNode;
+use PHPStan\PhpDocParser\Ast\PhpDoc\TypelessParamTagValueNode;
 use PHPStan\PhpDocParser\Ast\Type\ArrayShapeNode;
 use PHPStan\PhpDocParser\Ast\Type\ArrayTypeNode;
 use PHPStan\PhpDocParser\Ast\Type\CallableTypeNode;
@@ -25,10 +26,13 @@
 class ParameterAnnotation extends Annotation
 {
 
-	/** @var ParamTagValueNode|null */
+	/** @var ParamTagValueNode|TypelessParamTagValueNode|null */
 	private $contentNode;
 
-	public function __construct(string $name, int $startPointer, int $endPointer, ?string $content, ?ParamTagValueNode $contentNode)
+	/**
+	 * @param ParamTagValueNode|TypelessParamTagValueNode|null $contentNode
+	 */
+	public function __construct(string $name, int $startPointer, int $endPointer, ?string $content, $contentNode)
 	{
 		if (!in_array($name, ['@param', '@psalm-param', '@phpstan-param'], true)) {
 			throw new InvalidArgumentException(sprintf('Unsupported annotation %s.', $name));
@@ -44,7 +48,10 @@ public function isInvalid(): bool
 		return $this->contentNode === null;
 	}
 
-	public function getContentNode(): ParamTagValueNode
+	/**
+	 * @return ParamTagValueNode|TypelessParamTagValueNode|null
+	 */
+	public function getContentNode()
 	{
 		$this->errorWhenInvalid();
 
@@ -71,12 +78,16 @@ public function getParameterName(): string
 	}
 
 	/**
-	 * @return GenericTypeNode|CallableTypeNode|IntersectionTypeNode|UnionTypeNode|ArrayTypeNode|ArrayShapeNode|IdentifierTypeNode|ThisTypeNode|NullableTypeNode|ConstTypeNode
+	 * @return GenericTypeNode|CallableTypeNode|IntersectionTypeNode|UnionTypeNode|ArrayTypeNode|ArrayShapeNode|IdentifierTypeNode|ThisTypeNode|NullableTypeNode|ConstTypeNode|null
 	 */
-	public function getType(): TypeNode
+	public function getType(): ?TypeNode
 	{
 		$this->errorWhenInvalid();
 
+		if ($this->contentNode instanceof TypelessParamTagValueNode) {
+			return null;
+		}
+
 		/** @var GenericTypeNode|CallableTypeNode|IntersectionTypeNode|UnionTypeNode|ArrayTypeNode|ArrayShapeNode|IdentifierTypeNode|ThisTypeNode|NullableTypeNode|ConstTypeNode $type */
 		$type = $this->contentNode->type;
 		return $type;
diff --git a/SlevomatCodingStandard/Helpers/AnnotationHelper.php b/SlevomatCodingStandard/Helpers/AnnotationHelper.php
index 95e1c6456..c1fcf936b 100644
--- a/SlevomatCodingStandard/Helpers/AnnotationHelper.php
+++ b/SlevomatCodingStandard/Helpers/AnnotationHelper.php
@@ -89,7 +89,7 @@ public static function getAnnotationTypes(Annotation $annotation): array
 			}
 		} elseif ($annotation instanceof TypeImportAnnotation) {
 			$annotationTypes[] = $annotation->getImportedFrom();
-		} else {
+		} elseif ($annotation->getType() !== null) {
 			$annotationTypes[] = $annotation->getType();
 		}
 
diff --git a/SlevomatCodingStandard/Sniffs/TypeHints/ParameterTypeHintSniff.php b/SlevomatCodingStandard/Sniffs/TypeHints/ParameterTypeHintSniff.php
index c93e368c4..59769e715 100644
--- a/SlevomatCodingStandard/Sniffs/TypeHints/ParameterTypeHintSniff.php
+++ b/SlevomatCodingStandard/Sniffs/TypeHints/ParameterTypeHintSniff.php
@@ -409,6 +409,7 @@ private function checkTraversableTypeHintSpecification(
 				$hasTraversableTypeHint = true;
 			} elseif (
 				array_key_exists($parameterName, $parametersAnnotations)
+				&& $parametersAnnotations[$parameterName]->getType() !== null
 				&& AnnotationTypeHelper::containsTraversableType(
 					$parametersAnnotations[$parameterName]->getType(),
 					$phpcsFile,
@@ -443,6 +444,9 @@ private function checkTraversableTypeHintSpecification(
 			}
 
 			$parameterTypeNode = $parametersAnnotations[$parameterName]->getType();
+			if ($parameterTypeNode === null) {
+				continue;
+			}
 
 			if (
 				(
@@ -508,6 +512,9 @@ private function checkUselessAnnotations(
 			}
 
 			$parameterAnnotation = $parametersAnnotations[$parameterName];
+			if ($parameterAnnotation->getType() === null) {
+				continue;
+			}
 
 			if (!AnnotationHelper::isAnnotationUseless(
 				$phpcsFile,
